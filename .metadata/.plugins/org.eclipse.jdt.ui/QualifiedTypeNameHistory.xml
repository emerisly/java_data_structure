<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.io.Console"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="java.text.DecimalFormat"/>
    <fullyQualifiedTypeName name="java.text.NumberFormat"/>
    <fullyQualifiedTypeName name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction"/>
    <fullyQualifiedTypeName name="java.io.PrintStream"/>
    <fullyQualifiedTypeName name="java.io.OutputStreamWriter"/>
    <fullyQualifiedTypeName name="java.io.OutputStream"/>
    <fullyQualifiedTypeName name="java.io.BufferedOutputStream"/>
    <fullyQualifiedTypeName name="java.io.InputStreamReader"/>
    <fullyQualifiedTypeName name="java.lang.Double"/>
    <fullyQualifiedTypeName name="java.math.BigInteger"/>
    <fullyQualifiedTypeName name="java.io.FileNotFoundException"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.lang.Math"/>
    <fullyQualifiedTypeName name="javax.print.StreamPrintService"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="java.io.BufferedReader"/>
    <fullyQualifiedTypeName name="java.io.PrintWriter"/>
    <fullyQualifiedTypeName name="java.io.FileReader"/>
    <fullyQualifiedTypeName name="java.io.FileWriter"/>
    <fullyQualifiedTypeName name="java.io.BufferedWriter"/>
    <fullyQualifiedTypeName name="java.util.Comparator"/>
    <fullyQualifiedTypeName name="java.util.Iterator"/>
    <fullyQualifiedTypeName name="javax.sound.midi.Soundbank"/>
    <fullyQualifiedTypeName name="org.omg.Messaging.SyncScopeHelper"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="Hashing.HasingExperimentProject.StudentHash"/>
    <fullyQualifiedTypeName name="java.util.EmptyStackException"/>
    <fullyQualifiedTypeName name="javax.sound.sampled.AudioFileFormat.Type"/>
    <fullyQualifiedTypeName name="java.util.Queue"/>
    <fullyQualifiedTypeName name="java.util.LinkedList"/>
    <fullyQualifiedTypeName name="MyStack.MyStack"/>
    <fullyQualifiedTypeName name="MyQueue.stackQueue1"/>
    <fullyQualifiedTypeName name="MyQueue.StackQueue2"/>
    <fullyQualifiedTypeName name="java.awt.datatransfer.StringSelection"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.util.StringTokenizer"/>
    <fullyQualifiedTypeName name="java.util.Stack"/>
    <fullyQualifiedTypeName name="java.lang.Character"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="tree.implementation_SizeAndIsEmpty.Node"/>
    <fullyQualifiedTypeName name="jsjf.exceptions.EmptyCollectionException"/>
    <fullyQualifiedTypeName name="java.lang.reflect.Array"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.awt.List"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
</qualifiedTypeNameHistroy>
